# -*- coding: utf-8 -*-
"""supportticketssearch.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1u7xdpwDej0zjK0MyCYku-j_g9Bvcd4dl
"""
import sys
import pysqlite3
sys.modules["sqlite3"] = pysqlite3
sys.modules["pysqlite3"] = pysqlite3

import pandas as pd
import streamlit as st
import chromadb

github_url = "https://raw.githubusercontent.com/pqhunter15/supportticketchromasimilarity/main/support_cleaned.csv"
df = pd.read_csv(github_url)

from chroma_setup import load_chroma_collection


# Only load once per session
if "collection" not in st.session_state:
    st.session_state.collection = load_chroma_collection()

collection = st.session_state.collection



query = st.text_input("Enter your question:")


top_k = 3

if query and "collection" in st.session_state:
    results = st.session_state.collection.query(
        query_texts=[query],
        n_results=top_k,
        include=["documents", "metadatas", "distances"]
    )
 

    st.markdown("### Results:")
    for doc, meta, dist in zip(*[results[k][0] for k in ["documents", "metadatas", "distances"]]):
        doc_id = int(meta["original_doc_id"])
        match_row = df[df["doc_id"] == doc_id]

        if not match_row.empty:
            row = match_row.iloc[0]
            st.markdown(f"""
            **Doc ID:** {doc_id}
            **Similarity:** {dist:.4f}
            **Topic:** {row['topic_label']}
            **Answer:** {row['answer']}
            **Body:** {row['body'][:300]}...
            """)


